<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10</x>
      <y>10</y>
      <w>350</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>solitaire::InitiateGame
--
-Deck = new Full_Deck(): Full_Deck
-Tableau1 = new TableauPile(13): TableauPile
-Tableau2 = new TableauPile(13): TableauPile
-Tableau3 = new TableauPile(13): TableauPile
-Tableau4 = new TableauPile(13): TableauPile
-Tableau5 = new TableauPile(13): TableauPile
-Tableau6 = new TableauPile(13): TableauPile
-Tableau7 = new TableauPile(13): TableauPile
-stockPile = new StockPile(): StockPile
-wastePile = new WastePile(): WastePile
-foundationPile1 = new foundationPile(): FoundationPile
-foundationPile2 = new foundationPile(): FoundationPile
-foundationPile3 = new foundationPile(): FoundationPile
-foundationPile4 = new foundationPile(): FoundationPile
--
+InitiateGame(): ctor
+getTableau1(): TableauPile
+getTableau2(): TableauPile
+getTableau3(): TableauPile
+getTableau4(): TableauPile
+getTableau5(): TableauPile
+getTableau6(): TableauPile
+getTableau7(): TableauPile
+getFoundationPile1(): FoundationPile
+getFoundationPile2(): FoundationPile
+getFoundationPile3(): FoundationPile
+getFoundationPile4(): FoundationPile
+getStockPile(): StockPile
+getWastePile(): WastePile
+showGameBoard(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>380</x>
      <y>10</y>
      <w>310</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>solitaire::Card
--
-serialVersionUID = 1L: long
+SUIT_HEART = 0: int
+SUIT_SPADE = 1: int
+SUIT_DIAMOND = 2: int
+SUIT_CLUB = 3: int
+CARD_HIGHT = 120: int
+CARD_WIDTH = 85: int
-revealed: boolean
-value: int
-suit: int
-imagePath: String
-x = 0: int
-y = 0: int
-cardImage: BufferedImage
-newImage: Image
--
+Card(int value, int suit, String imagePath): ctor
+setRevealed(): void
+setFaceDown(): void
+getCardValue(): int
+getCardSuit(): int
+getStatus(): Boolean
+getImagePath(): String
+setPosition(int x, int y): void
+getPosition(): Point
+paintComponent(Graphics g): void
+getPreferredSize(): Dimension
+getCardImage(): BufferedImage
+isCardRed(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>10</y>
      <w>190</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>solitaire::CardPile
--
-serialVersionUID = 1L: long
#cards: ArrayList&lt;Card&gt;
-x = 0: int
-y = 0: int
--
+CardPile(): ctor
+push(Card aCard): void
+pop(): Card
+top(): Card
+tail(): Card
+getActualSize(): int
+setPosition(int x, int y): void
+getPoint(int x, int y): Point
+getCard(int x): Card
+getXCoord(): int
+getYCoord(): int
+draw(Graphics g): void
+canPutOnTop(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>740</y>
      <w>310</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>solitaireInterface::Card_Graphics
--
-cardImage: Image
--
~Card_Graphics(int x, int y, Image image): ctor
#paintComponent(Graphics g): void
+getPreferredSize(): Dimension
+getPoint(): Point
+setPosition(int x, int y): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>10</y>
      <w>210</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>solitaireInterface::Stock_Pile
--
~x: int
~y: int
~width: int
~height: int
--
~Stock_Pile(int x, int y): ctor
+getPreferredSize(): Dimension
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1150</x>
      <y>10</y>
      <w>250</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>solitaire::FoundationPile
--
-suit: int
--
+FoundationPile(): ctor
+setSuit(int suit): void
+getSuit(): int
+canPutOnTop(Card aCard): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1420</x>
      <y>10</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>solitaire::Full_Deck
--
-cardArray: Card[]
--
+Full_Deck(): ctor
+Shuffle_Deck(): void
+getCard(int cardIndex): Card
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>220</y>
      <w>260</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>solitaire::TableauPile
--
--
+TableauPile(int amountOfCards): ctor
+canPutOnTop(Card aCard): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1060</x>
      <y>740</y>
      <w>460</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>solitaireInterface::DoAction
--
-clicks = 0: int
--
+doEverything(Object deckType, int xPosition, int amountOfCards): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1540</x>
      <y>220</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>solitaire::Main
--
--
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1390</x>
      <y>220</y>
      <w>130</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>solitaire::StockPile
--
--
+StockPile(): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1210</x>
      <y>220</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>solitaire::WastePile
--
--
+WastePile(): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>740</y>
      <w>210</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>solitaireInterface::MainInterface
--
--
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
